name: Development Workflow
on:
  push:
    branches:
      - dev
      - feature/*

env:
  SLACK_CHANNEL: wecrm
  SLACK_USERNAME: WeOS CRM
  SLACK_ICON: https://github.com/wepala.png?size=48
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  SLACK_FOOTER: copyright 2021 Wepala
  GOPRIVATE: github.com/wepala/*
  BASE_URL: http://localhost:8681/wecrm
  BASE_PATH: /admin/

jobs:
  build-admin:
    runs-on: ubuntu-latest
    outputs:
      ticket: ${{ steps.setup.outputs.ticket }}
      today: ${{ steps.setup.outputs.today }}
    steps:
      - name: Setup build variables
        id: setup
        run: |
          TICKET=$(echo ${GITHUB_REF} | sed -e "s/refs\/heads\///g" | sed -e "s/feature\///g")
          echo "::set-output name=today::$(date +'%Y%m%d%H')"
          echo "::set-output name=ticket::${TICKET}"
      - name: Setup node env üèó
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '14'
          check-latest: true

      - name: Get yarn cache directory path üõ†
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules üì¶
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Download and build admin app
        run: |
          if [ "${{ steps.setup.outputs.ticket }}" == "dev" ]
          then
            URL="https://github.com/wepala/weos-crm-admin-default/archive/dev.tar.gz"
          else
            URL="https://github.com/wepala/weos-crm-admin-default/archive/feature/${{ steps.setup.outputs.ticket }}.tar.gz"
          fi
          CODE=$(curl -sL -w "%{http_code}" -I "$URL" -o /dev/null)
          echo "tried $CODE $URL"
          #if the url doesn't return a 404 then let's download and extract
          if [ "$CODE" != "404" ]
          then
              # successful
              if curl -sL -o release.tar.gz "$URL"; then
                echo "got most recent release $URL"
                tar -xvzf release.tar.gz --strip-components 1
                yarn install
                yarn generate
              else
                print "failed to download $URL"
              fi
              exit 0
          fi
          exit 124

      - uses: actions/upload-artifact@v2
        with:
          name: admin-app-build
          path: dist
  build-api:
    name: Release Go Binaries
    runs-on: ubuntu-latest
    needs: build-admin
    steps:
      - uses: actions/checkout@v2
      - name: get api src code
        run: |
          if [ "${{ needs.build-admin.outputs.ticket }}" == "dev" ]
          then
            URL="https://github.com/wepala/weos-crm-api/archive/dev.tar.gz"
          else
            URL="https://github.com/wepala/weos-crm-api/archive/feature/${{ needs.build-admin.outputs.ticket }}.tar.gz"
          fi
          CODE=$(curl -sL -w "%{http_code}" -I "$URL" -o /dev/null)
          echo "tried $CODE $URL"
          #if the url doesn't return a 404 then let's download and extract
          if [ "$CODE" != "404" ]
          then
              # successful
              if curl -sL -o release.tar.gz "$URL"; then
                echo "got most recent release $URL"
                tar -xvzf release.tar.gz --strip-components 1
              else
                print "failed to download $URL"
              fi
              exit 0
          fi
          exit 124
      - uses: crazy-max/ghaction-xgo@v1
        with:
          xgo_version: latest
          go_version: 1.15.x
          dest: build
          prefix: weos-crm
          targets: windows/386,windows/amd64,linux/386,linux/amd64,darwin/amd64
          v: true
          x: false
          race: false
          ldflags: -s -w
          buildmode: default
      - uses: actions/download-artifact@v2
        with:
          name: admin-app-build
          path: build/apps/admin/default
      - name: setup app
        run: |
          cp api.yaml.dist build/api.yaml

          #setup mac build
          mkdir -p build/mac/apps/admin
          cp api.yaml.dist build/mac/api.yaml
          cp -R build/apps/admin/default build/mac/apps/admin
          cp build/weos-crm-darwin-10.12-amd64 build/mac/weos-crm
          chmod +x build/mac/weos-crm
          tar -czf weos-crm-mac-amd64.tar.gz build/mac/* LICENSE NOTICE README.md --strip-components 2

          #setup linux 32 bit build
          mkdir -p build/linux32/apps/admin
          cp api.yaml.dist build/linux32/api.yaml
          cp -R build/apps/admin/default build/linux32/apps/admin
          cp build/weos-crm-linux-386 build/linux32/weos-crm
          chmod +x build/linux32/weos-crm
          tar -czf weos-crm-linux-386.tar.gz build/linux32/* LICENSE NOTICE README.md --strip-components 2

          #setup linux 64 bit build
          mkdir -p build/linux64/apps/admin
          cp api.yaml.dist build/linux64/api.yaml
          cp -R build/apps/admin/default build/linux64/apps/admin
          cp build/weos-crm-linux-amd64 build/linux64/weos-crm
          chmod +x build/linux64/weos-crm
          tar -czf weos-crm-linux-amd64.tar.gz build/linux32/* LICENSE NOTICE README.md --strip-components 2

          #setup windows 32 bit build
          mkdir -p build/win32/apps/admin
          cp api.yaml.dist build/win32/api.yaml
          cp -R build/apps/admin/default build/win32/apps/admin
          cp build/weos-crm-windows-4.0-386.exe build/win32/weos-crm.exe
          chmod +x build/win32/weos-crm.exe
          tar -czf weos-crm-win32.tar.gz build/win32/* LICENSE NOTICE README.md --strip-components 2

          #setup windows 64 bit build
          mkdir -p build/win64/apps/admin
          cp api.yaml.dist build/win64/api.yaml
          cp -R build/apps/admin/default build/win64/apps/admin
          cp build/weos-crm-windows-4.0-amd64.exe build/win64/weos-crm.exe
          chmod +x build/win64/weos-crm
          tar -czf weos-crm-win64.tar.gz build/win64/* LICENSE NOTICE README.md --strip-components 2

          #mkdir -p build/apps/admin/default

      - uses: actions/upload-artifact@v2
        with:
          name: Mac OS
          path: weos-crm-mac-amd64.tar.gz
      - uses: actions/upload-artifact@v2
        with:
          name: Linux 32 Bit
          path: weos-crm-linux-386.tar.gz
      - uses: actions/upload-artifact@v2
        with:
          name: Linux 64 Bit
          path: weos-crm-linux-amd64.tar.gz
      - uses: actions/upload-artifact@v2
        with:
          name: Windows 32 Bit
          path: weos-crm-win32.tar.gz
      - uses: actions/upload-artifact@v2
        with:
          name: Windows 64 bit
          path: weos-crm-win64.tar.gz
#  TODO: Add job for building desktop app.